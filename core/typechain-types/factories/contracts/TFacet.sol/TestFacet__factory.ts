/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestFacet,
  TestFacetInterface,
} from "../../../contracts/TFacet.sol/TestFacet";

const _abi = [
  {
    inputs: [],
    name: "testFunction",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060ed8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063e16b4a9b14602d575b600080fd5b604080518082018252600f81526e48656c6c6f2c204469616d6f6e642160881b60208201529051605c91906065565b60405180910390f35b600060208083528351808285015260005b818110156090578581018301518582016040015282016076565b8181111560a1576000604083870101525b50601f01601f191692909201604001939250505056fea264697066735822122038c74ec0c8b2e486b5f91c5937d3555a67a5c70d8fc682133ce5d604f932c56164736f6c634300080a0033";

type TestFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestFacet__factory extends ContractFactory {
  constructor(...args: TestFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestFacet__factory {
    return super.connect(runner) as TestFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestFacetInterface {
    return new Interface(_abi) as TestFacetInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestFacet {
    return new Contract(address, _abi, runner) as unknown as TestFacet;
  }
}
