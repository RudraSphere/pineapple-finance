/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DCAFacet,
  DCAFacetInterface,
} from "../../../contracts/facets/DCAFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DCAExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
    ],
    name: "DCASetup",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "executeDCA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interval",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_targetPrice",
        type: "int256",
      },
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address",
      },
    ],
    name: "setupDCA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userOrders",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextExecutionTime",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "targetPrice",
        type: "int256",
      },
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060016000556109ad806100256000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631f7d56891461005c5780634585e33b146100715780636e04ff0d14610084578063856652e9146100ae578063a859e70c146100fd575b600080fd5b61006f61006a366004610711565b610110565b005b61006f61007f36600461072a565b610397565b61009761009236600461072a565b61041c565b6040516100a592919061079c565b60405180910390f35b6100c16100bc366004610817565b6104a5565b604080516001600160a01b03978816815260208101969096528501939093526060840191909152608083015290911660a082015260c0016100a5565b61006f61010b366004610841565b610507565b33600090815260016020526040812080548390811061013157610131610891565b9060005260206000209060060201905080600301544210156101905760405162461bcd60e51b8152602060048201526013602482015272457865637574696f6e20746f6f206561726c7960681b60448201526064015b60405180910390fd5b600581015460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa1580156101dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020091906108c1565b505050915050816004015481121561026a5760405162461bcd60e51b815260206004820152602760248201527f43757272656e7420707269636520697320746f6f206c6f7720746f20657865636044820152667574652044434160c81b6064820152608401610187565b815460018301546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156102c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ea9190610905565b6103285760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610187565b81600201548260030160008282546103409190610944565b909155505081546001830154604080516001600160a01b039093168352602083019190915233917fa754fff30812ac1fc1c0c5b2740bda9ca2694cd95f01991e78c634d3653dc5d5910160405180910390a2505050565b61039f6106b7565b60005b3360009081526001602052604090205481101561040d573360009081526001602052604090208054829081106103da576103da610891565b90600052602060002090600602016003015442106103fb576103fb81610110565b806104058161095c565b9150506103a2565b506104186001600055565b5050565b60006060815b3360009081526001602052604090205481101561048d5733600090815260016020526040902080548290811061045a5761045a610891565b906000526020600020906006020160030154421061047b576001925061048d565b806104858161095c565b915050610422565b50506040805160208101909152600081529250929050565b600160205281600052604060002081815481106104c157600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b0394851697509295509093909290911686565b6000831161054e5760405162461bcd60e51b81526020600482015260146024820152730496e74657276616c206d757374206265203e20360641b6044820152606401610187565b6001600160a01b0381166105a45760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964207072696365206665656420616464726573730000000000006044820152606401610187565b33600090815260016020908152604091829020825160c0810184526001600160a01b0389168152918201879052918101859052606081016105e58642610944565b815260208082018690526001600160a01b03858116604093840152845460018082018755600096875295839020855160069092020180549183166001600160a01b0319928316178155858401519681019690965584840151600287015560608086015160038801556080860151600488015560a090950151600590960180549683169690911695909517909455815193891684528301879052820185905233917fe579638e7970770a4ea87499f9f334fc5f696ae5e4f669d51abac6c8b1ecfcc8910160405180910390a25050505050565b6002600054141561070a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610187565b6002600055565b60006020828403121561072357600080fd5b5035919050565b6000806020838503121561073d57600080fd5b823567ffffffffffffffff8082111561075557600080fd5b818501915085601f83011261076957600080fd5b81358181111561077857600080fd5b86602082850101111561078a57600080fd5b60209290920196919550909350505050565b821515815260006020604081840152835180604085015260005b818110156107d2578581018301518582016060015282016107b6565b818111156107e4576000606083870101525b50601f01601f191692909201606001949350505050565b80356001600160a01b038116811461081257600080fd5b919050565b6000806040838503121561082a57600080fd5b610833836107fb565b946020939093013593505050565b600080600080600060a0868803121561085957600080fd5b610862866107fb565b9450602086013593506040860135925060608601359150610885608087016107fb565b90509295509295909350565b634e487b7160e01b600052603260045260246000fd5b805169ffffffffffffffffffff8116811461081257600080fd5b600080600080600060a086880312156108d957600080fd5b6108e2866108a7565b9450602086015193506040860151925060608601519150610885608087016108a7565b60006020828403121561091757600080fd5b8151801515811461092757600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156109575761095761092e565b500190565b60006000198214156109705761097061092e565b506001019056fea2646970667358221220e3df8745ef7d58fa4711fe3cb491d91dab06c61f7ebd09aa94430f25737ee0d464736f6c634300080a0033";

type DCAFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DCAFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DCAFacet__factory extends ContractFactory {
  constructor(...args: DCAFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DCAFacet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DCAFacet__factory {
    return super.connect(runner) as DCAFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DCAFacetInterface {
    return new Interface(_abi) as DCAFacetInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DCAFacet {
    return new Contract(address, _abi, runner) as unknown as DCAFacet;
  }
}
